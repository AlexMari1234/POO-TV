Starting audit...
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:199: Line is longer than 100 characters (found 144). [LineLength]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:210:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Test.java:226: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:11:17: Using the '.*' form of import should be avoided - datainput.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:180:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:182:62: Parameter pages should be final. [FinalParameters]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:199:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:217:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:238:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/database/DataBase.java:253:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:1:9: Name 'ObservNotfications' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:12:5: Class 'NotifyUsersFromDataBase' looks like designed for extension (can be subclassed), but the method 'addObserver' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotifyUsersFromDataBase' final or making the method 'addObserver' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:16:5: Class 'NotifyUsersFromDataBase' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotifyUsersFromDataBase' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:20:5: Class 'NotifyUsersFromDataBase' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotifyUsersFromDataBase' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:24:5: Class 'NotifyUsersFromDataBase' looks like designed for extension (can be subclassed), but the method 'notifyUsersAboutAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotifyUsersFromDataBase' final or making the method 'notifyUsersAboutAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:50:5: Class 'NotifyUsersFromDataBase' looks like designed for extension (can be subclassed), but the method 'notifyUsersAboutDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotifyUsersFromDataBase' final or making the method 'notifyUsersAboutDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotifyUsersFromDataBase.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationForUser.java:1:9: Name 'ObservNotfications' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationForUser.java:8:5: Class 'NotificationForUser' looks like designed for extension (can be subclassed), but the method 'update' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotificationForUser' final or making the method 'update' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationForUser.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationForUser.java:12:5: Class 'NotificationForUser' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotificationForUser' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationForUser.java:16:5: Class 'NotificationForUser' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NotificationForUser' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationDataBase.java:1:9: Name 'ObservNotfications' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/ObservNotifications/NotificationDataBase.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Register.java:30:5: Class 'Register' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Register.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForChangePage.java:17:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Like.java:19:5: Class 'Like' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Like' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Like.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Search.java:23:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Search.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/BuyPremiumAccount.java:15:5: Class 'BuyPremiumAccount' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BuyPremiumAccount' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/BuyPremiumAccount.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/FilterOn.java:34:5: Class 'FilterOn' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOn' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/FilterOn.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Purchase.java:16:5: Class 'Purchase' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Purchase' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Purchase.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Subscribe.java:20:5: Class 'Subscribe' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Subscribe' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Subscribe.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Subscribe.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Subscribe.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Login.java:29:5: Class 'Login' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Login.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForBackPage.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForBackPage.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:7:17: Using the '.*' form of import should be avoided - datainput.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:18:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:20:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:46:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/ActionForOnePage.java:302: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Watch.java:17:5: Class 'Watch' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Watch' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Watch.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/BuyTokens.java:18:5: Class 'BuyTokens' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BuyTokens' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/BuyTokens.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Rate.java:21:5: Class 'Rate' looks like designed for extension (can be subclassed), but the method 'executeCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rate' final or making the method 'executeCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/actionforpages/Rate.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/outputformat/StandardOutput.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/outputformat/StandardError.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/currentdata/CurrentPage.java:21:24: Parameter currentPage should be final. [FinalParameters]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/sortactions/SortByLikes.java:9:5: Class 'SortByLikes' looks like designed for extension (can be subclassed), but the method 'sort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByLikes' final or making the method 'sort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Movies.java:339:45: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Movies.java:485:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Rating.java:13:5: Class 'Rating' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rating' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Rating.java:17:5: Class 'Rating' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rating' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Rating.java:21:5: Class 'Rating' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rating' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Rating.java:25:5: Class 'Rating' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rating' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Users.java:149:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Users.java:153:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Users.java:157:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'getSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Users.java:161:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:137:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:141:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:145:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:149:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:153:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Actions.java:157:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Recommendation.java:13:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Recommendation.java:17:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Recommendation.java:21:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'getLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'getLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Recommendation.java:25:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'setLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'setLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Notifications.java:13:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Notifications.java:17:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Notifications.java:21:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/datainput/Notifications.java:25:5: Class 'Notifications' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notifications' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/SolveCommands.java:8:17: Using the '.*' form of import should be avoided - datainput.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/SolveCommands.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/SolveCommands.java:16:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/SolveCommands.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/Main.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/GitFinal/Etapa2POO/./src/filtersactions/FilterByCountry.java:7:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
Audit done.
Checkstyle ends with 97 errors.
